<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RangRiti - Submit Your Masterpiece</title>
    <link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Playfair+Display+SC:wght@400;700&family=Cormorant+Garamond:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Cormorant Garamond', serif;
            background: linear-gradient(135deg, #f4e4c1 0%, #e8d5b0 50%, #dcc79f 100%);
            min-height: 100vh;
            position: relative;
            overflow-x: hidden;
        }

        /* Dynamic animated background elements */
        .bg-mandala {
            position: fixed;
            width: 200px;
            height: 200px;
            opacity: 0.08;
            animation: float 20s infinite ease-in-out;
            z-index: 1;
        }

        .bg-mandala:nth-child(1) {
            top: 10%;
            left: 5%;
            animation-delay: 0s;
        }

        .bg-mandala:nth-child(2) {
            top: 60%;
            right: 10%;
            animation-delay: -7s;
        }

        .bg-mandala:nth-child(3) {
            bottom: 15%;
            left: 15%;
            animation-delay: -14s;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            25% { transform: translateY(-20px) rotate(90deg); }
            50% { transform: translateY(-40px) rotate(180deg); }
            75% { transform: translateY(-20px) rotate(270deg); }
        }

        .sparkle {
            position: fixed;
            width: 4px;
            height: 4px;
            background: #d4af37;
            border-radius: 50%;
            animation: sparkle 3s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes sparkle {
            0%, 100% { opacity: 0; transform: scale(0); }
            50% { opacity: 1; transform: scale(1); }
        }

        /* Enhanced dynamic background */
        .floating-lotus {
            position: fixed;
            width: 60px;
            height: 60px;
            opacity: 0.1;
            animation: floatLotus 25s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes floatLotus {
            0%, 100% { transform: translate(0, 0) rotate(0deg) scale(0.8); }
            25% { transform: translate(50px, -30px) rotate(90deg) scale(1.2); }
            50% { transform: translate(0, -60px) rotate(180deg) scale(0.9); }
            75% { transform: translate(-50px, -30px) rotate(270deg) scale(1.1); }
        }

        .paisley-pattern {
            position: fixed;
            width: 80px;
            height: 120px;
            opacity: 0.06;
            animation: paisleyFloat 30s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes paisleyFloat {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            33% { transform: translate(80px, -40px) rotate(120deg); }
            66% { transform: translate(-40px, -80px) rotate(240deg); }
        }

        .diya-flame {
            position: fixed;
            width: 8px;
            height: 12px;
            background: radial-gradient(circle, #ffd700 0%, #ff8c00 50%, #dc143c 100%);
            border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
            animation: flameFlicker 2s infinite ease-in-out;
            z-index: 2;
        }

        @keyframes flameFlicker {
            0%, 100% { transform: scale(1) rotate(-2deg); opacity: 0.8; }
            25% { transform: scale(1.1) rotate(2deg); opacity: 1; }
            50% { transform: scale(0.9) rotate(-1deg); opacity: 0.9; }
            75% { transform: scale(1.05) rotate(1deg); opacity: 1; }
        }

        .flowing-silk {
            position: fixed;
            width: 200px;
            height: 400px;
            background: linear-gradient(45deg, transparent, rgba(212, 175, 55, 0.03), transparent);
            animation: silkFlow 15s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes silkFlow {
            0%, 100% { transform: translateY(0) rotate(0deg) scaleY(1); }
            50% { transform: translateY(-50px) rotate(5deg) scaleY(1.2); }
        }

        .golden-particles {
            position: fixed;
            width: 2px;
            height: 2px;
            background: #d4af37;
            border-radius: 50%;
            animation: particleRise 8s infinite ease-out;
            z-index: 1;
        }

        @keyframes particleRise {
            0% { transform: translateY(100vh) scale(0); opacity: 0; }
            10% { opacity: 1; transform: scale(1); }
            90% { opacity: 1; }
            100% { transform: translateY(-100px) scale(0); opacity: 0; }
        }

        .rangoli-pattern {
            position: fixed;
            width: 150px;
            height: 150px;
            opacity: 0.05;
            animation: rangoliRotate 40s infinite linear;
            z-index: 1;
        }

        @keyframes rangoliRotate {
            0% { transform: rotate(0deg) scale(0.8); }
            50% { transform: rotate(180deg) scale(1.2); }
            100% { transform: rotate(360deg) scale(0.8); }
        }

        .feather-drift {
            position: fixed;
            width: 20px;
            height: 40px;
            opacity: 0.1;
            animation: featherDrift 20s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes featherDrift {
            0%, 100% { transform: translate(0, 0) rotate(0deg); }
            25% { transform: translate(100px, -50px) rotate(15deg); }
            50% { transform: translate(-50px, -100px) rotate(-10deg); }
            75% { transform: translate(150px, -75px) rotate(20deg); }
        }

        .incense-smoke {
            position: fixed;
            width: 3px;
            height: 200px;
            background: linear-gradient(to top, rgba(139, 69, 19, 0.1), transparent);
            animation: smokeRise 12s infinite ease-in-out;
            z-index: 1;
        }

        @keyframes smokeRise {
            0% { transform: translateY(0) scaleY(1) rotate(0deg); opacity: 0.3; }
            50% { transform: translateY(-50px) scaleY(1.2) rotate(5deg); opacity: 0.1; }
            100% { transform: translateY(-100px) scaleY(0.8) rotate(-3deg); opacity: 0; }
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 40px 20px;
            position: relative;
            z-index: 10;
        }

        .royal-header {
            text-align: center;
            margin-bottom: 50px;
            animation: slideDown 1s ease-out;
        }

        .royal-header h1 {
            font-family: 'Cinzel Decorative', serif;
            font-size: 3rem;
            color: #8b4513;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
            margin-bottom: 10px;
            position: relative;
        }

        .royal-header h1::before,
        .royal-header h1::after {
            content: "✦";
            position: absolute;
            top: 50%;
            color: #d4af37;
            font-size: 1.5rem;
            transform: translateY(-50%);
        }

        .royal-header h1::before {
            left: -60px;
        }

        .royal-header h1::after {
            right: -60px;
        }

        .royal-header p {
            font-size: 1.2rem;
            color: #654321;
            font-style: italic;
        }

        .scroll-section {
            background: linear-gradient(145deg, #f8f0e3 0%, #f0e6d2 100%);
            border: 3px solid #d4af37;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            position: relative;
            overflow: hidden;
            animation: slideInFromRight 0.8s ease-out;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .scroll-section:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        }

        .scroll-section::before {
            content: "";
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, #d4af37, #b8860b, #d4af37);
            border-radius: 22px;
            z-index: -1;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .scroll-section:hover::before {
            opacity: 1;
        }

        .section-title {
            font-family: 'Playfair Display SC', serif;
            font-size: 1.8rem;
            color: #8b4513;
            margin-bottom: 20px;
            text-align: center;
            position: relative;
            padding-bottom: 10px;
        }

        .section-title::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 2px;
            background: linear-gradient(90deg, transparent, #d4af37, transparent);
        }

        .upload-frame {
            border: 3px dashed #d4af37;
            border-radius: 15px;
            padding: 40px;
            text-align: center;
            background: rgba(255,255,255,0.3);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .upload-frame:hover {
            border-color: #b8860b;
            background: rgba(255,255,255,0.5);
            box-shadow: 0 0 20px rgba(212, 175, 55, 0.3);
        }

        .upload-frame.drag-over {
            border-color: #8b4513;
            background: rgba(212, 175, 55, 0.2);
            transform: scale(1.02);
        }

        .upload-icon {
            font-size: 3rem;
            color: #d4af37;
            margin-bottom: 15px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        .upload-text {
            font-size: 1.2rem;
            color: #654321;
            font-weight: 500;
        }

        .elegant-input {
            width: 100%;
            padding: 15px 20px;
            font-size: 1.1rem;
            font-family: 'Cormorant Garamond', serif;
            border: 2px solid #d4af37;
            border-radius: 10px;
            background: rgba(255,255,255,0.7);
            color: #654321;
            transition: all 0.3s ease;
            margin-bottom: 15px;
        }

        .elegant-input:focus {
            outline: none;
            border-color: #b8860b;
            box-shadow: 0 0 15px rgba(212, 175, 55, 0.3);
            background: rgba(255,255,255,0.9);
        }

        .elegant-textarea {
            width: 100%;
            padding: 15px 20px;
            font-size: 1.1rem;
            font-family: 'Cormorant Garamond', serif;
            border: 2px solid #d4af37;
            border-radius: 10px;
            background: rgba(255,255,255,0.7);
            color: #654321;
            transition: all 0.3s ease;
            resize: vertical;
            min-height: 100px;
        }

        .elegant-textarea:focus {
            outline: none;
            border-color: #b8860b;
            box-shadow: 0 0 15px rgba(212, 175, 55, 0.3);
            background: rgba(255,255,255,0.9);
        }

        .price-container {
            display: flex;
            align-items: center;
            background: linear-gradient(135deg, #d4af37 0%, #b8860b 100%);
            border-radius: 50px;
            padding: 10px 20px;
            width: fit-content;
            margin: 0 auto;
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .price-symbol {
            font-size: 1.5rem;
            color: white;
            font-weight: bold;
            margin-right: 10px;
        }

        .price-input {
            background: transparent;
            border: none;
            color: white;
            font-size: 1.2rem;
            font-weight: bold;
            width: 120px;
            text-align: center;
        }

        .price-input:focus {
            outline: none;
        }

        .price-input::placeholder {
            color: rgba(255,255,255,0.8);
        }

        .quantity-container {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .quantity-btn {
            width: 50px;
            height: 50px;
            border: 2px solid #d4af37;
            background: linear-gradient(135deg, #f8f0e3 0%, #f0e6d2 100%);
            border-radius: 50%;
            font-size: 1.5rem;
            color: #8b4513;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .quantity-btn:hover {
            background: linear-gradient(135deg, #d4af37 0%, #b8860b 100%);
            color: white;
            transform: scale(1.1);
        }

        .quantity-display {
            font-size: 1.5rem;
            color: #8b4513;
            font-weight: bold;
            min-width: 50px;
            text-align: center;
            padding: 10px;
            background: rgba(255,255,255,0.5);
            border-radius: 10px;
            border: 2px solid #d4af37;
        }

        .royal-submit {
            background: linear-gradient(135deg, #d4af37 0%, #b8860b 50%, #8b4513 100%);
            color: white;
            border: none;
            padding: 18px 40px;
            font-size: 1.3rem;
            font-family: 'Playfair Display SC', serif;
            border-radius: 50px;
            cursor: pointer;
            display: block;
            margin: 40px auto 0;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 2px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.3);
        }

        .royal-submit:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 35px rgba(0,0,0,0.4);
        }

        .royal-submit::before {
            content: "";
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.5s ease;
        }

        .royal-submit:hover::before {
            left: 100%;
        }

        .preview-image {
            max-width: 100%;
            max-height: 300px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
            margin-top: 20px;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-50px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideInFromRight {
            from { opacity: 0; transform: translateX(100px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .scroll-section:nth-child(2) { animation-delay: 0.1s; }
        .scroll-section:nth-child(3) { animation-delay: 0.2s; }
        .scroll-section:nth-child(4) { animation-delay: 0.3s; }
        .scroll-section:nth-child(5) { animation-delay: 0.4s; }
        .scroll-section:nth-child(6) { animation-delay: 0.5s; }

        @media (max-width: 768px) {
            .royal-header h1 {
                font-size: 2rem;
            }
            
            .royal-header h1::before,
            .royal-header h1::after {
                display: none;
            }
            
            .scroll-section {
                padding: 20px;
                margin-bottom: 20px;
            }
            
            .section-title {
                font-size: 1.5rem;
            }
            
            .upload-frame {
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body>
    <!-- Enhanced dynamic animated background -->
    <div class="bg-mandala">
        <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <circle cx="100" cy="100" r="80" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="60" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="40" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="20" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
            <path d="M100,20 L110,90 L100,100 L90,90 Z" fill="#d4af37" opacity="0.3"/>
            <path d="M180,100 L110,110 L100,100 L110,90 Z" fill="#d4af37" opacity="0.3"/>
            <path d="M100,180 L90,110 L100,100 L110,110 Z" fill="#d4af37" opacity="0.3"/>
            <path d="M20,100 L90,90 L100,100 L90,110 Z" fill="#d4af37" opacity="0.3"/>
        </svg>
    </div>
    <div class="bg-mandala">
        <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <circle cx="100" cy="100" r="80" fill="none" stroke="#8b4513" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="60" fill="none" stroke="#8b4513" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="40" fill="none" stroke="#8b4513" stroke-width="1" opacity="0.3"/>
        </svg>
    </div>
    <div class="bg-mandala">
        <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
            <circle cx="100" cy="100" r="80" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
            <circle cx="100" cy="100" r="60" fill="none" stroke="#d4af37" stroke-width="1" opacity="0.3"/>
        </svg>
    </div>

    <!-- Floating lotus patterns -->
    <div class="floating-lotus" style="top: 20%; left: 80%; animation-delay: 0s;">
        <svg viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg">
            <path d="M30,10 Q35,15 40,25 Q35,35 30,30 Q25,35 20,25 Q25,15 30,10 Z" fill="#d4af37"/>
            <path d="M30,15 Q32,20 35,25 Q32,30 30,27 Q28,30 25,25 Q28,20 30,15 Z" fill="#8b4513"/>
            <circle cx="30" cy="25" r="3" fill="#ffd700"/>
        </svg>
    </div>
    <div class="floating-lotus" style="top: 70%; left: 10%; animation-delay: -8s;">
        <svg viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg">
            <path d="M30,10 Q35,15 40,25 Q35,35 30,30 Q25,35 20,25 Q25,15 30,10 Z" fill="#8b4513"/>
            <path d="M30,15 Q32,20 35,25 Q32,30 30,27 Q28,30 25,25 Q28,20 30,15 Z" fill="#d4af37"/>
            <circle cx="30" cy="25" r="3" fill="#ffd700"/>
        </svg>
    </div>

    <!-- Paisley patterns -->
    <div class="paisley-pattern" style="top: 40%; left: 5%; animation-delay: -5s;">
        <svg viewBox="0 0 80 120" xmlns="http://www.w3.org/2000/svg">
            <path d="M40,10 Q60,20 70,50 Q60,80 40,90 Q20,80 10,50 Q20,20 40,10 Z" fill="none" stroke="#d4af37" stroke-width="1"/>
            <path d="M40,20 Q50,25 55,45 Q50,65 40,70 Q30,65 25,45 Q30,25 40,20 Z" fill="none" stroke="#8b4513" stroke-width="1"/>
        </svg>
    </div>
    <div class="paisley-pattern" style="top: 15%; right: 20%; animation-delay: -12s;">
        <svg viewBox="0 0 80 120" xmlns="http://www.w3.org/2000/svg">
            <path d="M40,10 Q60,20 70,50 Q60,80 40,90 Q20,80 10,50 Q20,20 40,10 Z" fill="none" stroke="#8b4513" stroke-width="1"/>
            <path d="M40,20 Q50,25 55,45 Q50,65 40,70 Q30,65 25,45 Q30,25 40,20 Z" fill="none" stroke="#d4af37" stroke-width="1"/>
        </svg>
    </div>

    <!-- Rangoli patterns -->
    <div class="rangoli-pattern" style="top: 25%; right: 5%; animation-delay: -10s;">
        <svg viewBox="0 0 150 150" xmlns="http://www.w3.org/2000/svg">
            <polygon points="75,15 85,35 105,35 90,50 95,70 75,60 55,70 60,50 45,35 65,35" fill="none" stroke="#d4af37" stroke-width="1"/>
            <polygon points="75,25 80,40 95,40 85,50 88,65 75,58 62,65 65,50 55,40 70,40" fill="none" stroke="#8b4513" stroke-width="1"/>
            <circle cx="75" cy="75" r="20" fill="none" stroke="#d4af37" stroke-width="1"/>
            <circle cx="75" cy="75" r="30" fill="none" stroke="#8b4513" stroke-width="1"/>
        </svg>
    </div>
    <div class="rangoli-pattern" style="bottom: 30%; left: 25%; animation-delay: -20s;">
        <svg viewBox="0 0 150 150" xmlns="http://www.w3.org/2000/svg">
            <polygon points="75,15 85,35 105,35 90,50 95,70 75,60 55,70 60,50 45,35 65,35" fill="none" stroke="#8b4513" stroke-width="1"/>
            <polygon points="75,25 80,40 95,40 85,50 88,65 75,58 62,65 65,50 55,40 70,40" fill="none" stroke="#d4af37" stroke-width="1"/>
            <circle cx="75" cy="75" r="15" fill="none" stroke="#d4af37" stroke-width="1"/>
        </svg>
    </div>

    <!-- Flowing silk elements -->
    <div class="flowing-silk" style="top: 10%; left: 30%; animation-delay: 0s;"></div>
    <div class="flowing-silk" style="top: 40%; right: 15%; animation-delay: -7s;"></div>
    <div class="flowing-silk" style="bottom: 20%; left: 60%; animation-delay: -14s;"></div>

    <!-- Feather drift elements -->
    <div class="feather-drift" style="top: 30%; left: 70%; animation-delay: -3s;">
        <svg viewBox="0 0 20 40" xmlns="http://www.w3.org/2000/svg">
            <path d="M10,5 Q8,10 5,15 Q8,20 10,25 Q12,20 15,15 Q12,10 10,5 Z" fill="#d4af37" opacity="0.6"/>
            <line x1="10" y1="5" x2="10" y2="35" stroke="#8b4513" stroke-width="1" opacity="0.8"/>
        </svg>
    </div>
    <div class="feather-drift" style="top: 60%; right: 30%; animation-delay: -15s;">
        <svg viewBox="0 0 20 40" xmlns="http://www.w3.org/2000/svg">
            <path d="M10,5 Q8,10 5,15 Q8,20 10,25 Q12,20 15,15 Q12,10 10,5 Z" fill="#8b4513" opacity="0.6"/>
            <line x1="10" y1="5" x2="10" y2="35" stroke="#d4af37" stroke-width="1" opacity="0.8"/>
        </svg>
    </div>

    <!-- Incense smoke -->
    <div class="incense-smoke" style="bottom: 10%; left: 15%; animation-delay: 0s;"></div>
    <div class="incense-smoke" style="bottom: 25%; right: 25%; animation-delay: -6s;"></div>
    <div class="incense-smoke" style="bottom: 40%; left: 80%; animation-delay: -12s;"></div>

    <!-- Diya flames -->
    <div class="diya-flame" style="bottom: 15%; left: 12%; animation-delay: 0s;"></div>
    <div class="diya-flame" style="bottom: 30%; right: 22%; animation-delay: -1s;"></div>
    <div class="diya-flame" style="bottom: 45%; left: 77%; animation-delay: -2s;"></div>

<form id="artworkForm" action="/api/add-product" method="POST" enctype="multipart/form-data">
  <div class="container">
    <div class="royal-header">
      <h1>Royal Art Gallery</h1>
      <p>Present your masterpiece to the world</p>
    </div>

    <!-- Upload Image -->
    <div class="scroll-section">
      <h2 class="section-title">🎨 Your Masterpiece</h2>
      <div class="upload-frame" id="uploadFrame" onclick="document.getElementById('artworkFile').click()">
        <div class="upload-icon">🖼️</div>
        <div class="upload-text">
          <strong>Drop your artwork here</strong><br>
          or click to browse your gallery
        </div>
        <input type="file" name="images" id="artworkFile" accept="image/*" multiple required>
        <div id="imagePreview"></div>
      </div>
    </div>

    <!-- Title -->
    <div class="scroll-section">
      <h2 class="section-title">🖋️ Title of Your Creation</h2>
      <input type="text" class="elegant-input" name="name" id="artworkTitle" placeholder="Name of your masterpiece..." required>
    </div>

    <!-- Description -->
    <div class="scroll-section">
      <h2 class="section-title">📜 Story Behind Your Art</h2>
      <textarea class="elegant-textarea" name="description" id="artworkDescription" placeholder="Your story, journey, inspiration..." required></textarea>
    </div>

    <!-- Category -->
    <div class="scroll-section">
      <h2 class="section-title">📂 Art Category</h2>
      <select name="category" class="elegant-input" required>
        <option value="">-- Select Category --</option>
        <option value="Painting">Painting</option>
        <option value="Pottery">Pottery</option>
        <option value="Sculpture">Sculpture</option>
        <option value="Handloom">Handloom</option>
        <option value="Woodcraft">Woodcraft</option>
        <option value="Other">Other</option>
      </select>
    </div>

    <!-- Price -->
    <div class="scroll-section">
      <h2 class="section-title">💰 Value of Your Art</h2>
      <div class="price-container">
        <span class="price-symbol">₹</span>
        <input type="number" class="price-input" name="price" id="artworkPrice" placeholder="0000" min="0" required>
      </div>
    </div>

    <!-- Quantity -->
    <div class="scroll-section">
      <h2 class="section-title">🔢 Available Pieces</h2>
      <div class="quantity-container">
        <button type="button" class="quantity-btn" onclick="changeQuantity(-1)">-</button>
        <input type="number" class="quantity-display" name="quantityAvailable" id="quantityDisplay" value="1" readonly>
        <button type="button" class="quantity-btn" onclick="changeQuantity(1)">+</button>
      </div>
    </div>

    <!-- Material -->
    <div class="scroll-section">
      <h2 class="section-title">🧵 Material Used</h2>
      <input type="text" class="elegant-input" name="material" placeholder="Canvas, clay, metal, etc.">
    </div>

    <!-- Size -->
    <div class="scroll-section">
      <h2 class="section-title">📏 Size</h2>
      <input type="text" class="elegant-input" name="size" placeholder="e.g. 12x18 inches">
    </div>

    <!-- Origin -->
    <div class="scroll-section">
      <h2 class="section-title">🌍 Region of Origin</h2>
      <input type="text" class="elegant-input" name="originRegion" placeholder="e.g. Rajasthan, Bengal">
    </div>

    <!-- Tags -->
    <div class="scroll-section">
      <h2 class="section-title">🏷️ Tags</h2>
      <input type="text" class="elegant-input" name="tags" placeholder="Comma-separated tags (e.g. handmade, tribal)">
    </div>

    <!-- Artist -->
    <div class="scroll-section">
      <h2 class="section-title">🧑‍🎨 Artist Signature</h2>
      <input type="text" class="elegant-input" name="artistName" id="artistName" placeholder="Your name..." required>
    </div>

    <!-- Submit -->
    <button type="submit" class="royal-submit">
      ✨ Present to Gallery ✨
    </button>
  </div>
</form>
 <script>
        // Enhanced dynamic background with more animations
        function createSparkles() {
            for (let i = 0; i < 25; i++) {
                const sparkle = document.createElement('div');
                sparkle.className = 'sparkle';
                sparkle.style.left = Math.random() * 100 + '%';
                sparkle.style.top = Math.random() * 100 + '%';
                sparkle.style.animationDelay = Math.random() * 3 + 's';
                sparkle.style.animationDuration = (2 + Math.random() * 2) + 's';
                document.body.appendChild(sparkle);
            }
        }

        function createGoldenParticles() {
            for (let i = 0; i < 15; i++) {
                const particle = document.createElement('div');
                particle.className = 'golden-particles';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 8 + 's';
                particle.style.animationDuration = (6 + Math.random() * 4) + 's';
                document.body.appendChild(particle);
            }
        }
function changeQuantity(delta) {
  const quantityInput = document.getElementById('quantityDisplay');
  let current = parseInt(quantityInput.value);
  current = Math.max(1, current + delta);
  quantityInput.value = current;
}
        function createDiyaFlames() {
            const flamePositions = [
                { bottom: '20%', left: '8%' },
                { bottom: '35%', right: '12%' },
                { bottom: '50%', left: '85%' },
                { bottom: '65%', right: '78%' },
                { bottom: '80%', left: '25%' }
            ];

            flamePositions.forEach((pos, index) => {
                const flame = document.createElement('div');
                flame.className = 'diya-flame';
                Object.assign(flame.style, pos);
                flame.style.animationDelay = (index * 0.4) + 's';
                flame.style.animationDuration = (1.8 + Math.random() * 0.6) + 's';
                document.body.appendChild(flame);
            });
        }

        function createFloatingElements() {
            // Create additional lotus patterns
            const lotusPositions = [
                { top: '15%', left: '75%', delay: '-2s' },
                { top: '45%', right: '5%', delay: '-10s' },
                { top: '75%', left: '60%', delay: '-18s' }
            ];

            lotusPositions.forEach(pos => {
                const lotus = document.createElement('div');
                lotus.className = 'floating-lotus';
                lotus.style.top = pos.top;
                if (pos.left) lotus.style.left = pos.left;
                if (pos.right) lotus.style.right = pos.right;
                lotus.style.animationDelay = pos.delay;
                lotus.innerHTML = `
                    <svg viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg">
                        <path d="M30,10 Q35,15 40,25 Q35,35 30,30 Q25,35 20,25 Q25,15 30,10 Z" fill="#d4af37"/>
                        <path d="M30,15 Q32,20 35,25 Q32,30 30,27 Q28,30 25,25 Q28,20 30,15 Z" fill="#8b4513"/>
                        <circle cx="30" cy="25" r="3" fill="#ffd700"/>
                    </svg>
                `;
                document.body.appendChild(lotus);
            });
        }

        function createMouseTrail() {
            let mouseTrails = [];
            document.addEventListener('mousemove', (e) => {
                if (Math.random() < 0.1) { // Only create trail occasionally
                    const trail = document.createElement('div');
                    trail.style.position = 'fixed';
                    trail.style.left = e.clientX + 'px';
                    trail.style.top = e.clientY + 'px';
                    trail.style.width = '3px';
                    trail.style.height = '3px';
                    trail.style.background = '#d4af37';
                    trail.style.borderRadius = '50%';
                    trail.style.pointerEvents = 'none';
                    trail.style.zIndex = '5';
                    trail.style.animation = 'sparkle 1s ease-out forwards';
                    document.body.appendChild(trail);
                    
                    mouseTrails.push(trail);
                    
                    setTimeout(() => {
                        if (trail.parentNode) {
                            trail.parentNode.removeChild(trail);
                        }
                        mouseTrails = mouseTrails.filter(t => t !== trail);
                    }, 1000);
                }
            });
        }

        function createPulsingBackground() {
            const pulseInterval = setInterval(() => {
                const randomElement = document.querySelector('.scroll-section:nth-child(' + (Math.floor(Math.random() * 6) + 2) + ')');
                if (randomElement) {
                    randomElement.style.transform = 'scale(1.01)';
                    randomElement.style.boxShadow = '0 15px 40px rgba(212, 175, 55, 0.2)';
                    
                    setTimeout(() => {
                        randomElement.style.transform = 'scale(1)';
                        randomElement.style.boxShadow = '0 8px 25px rgba(0,0,0,0.15)';
                    }, 2000);
                }
            }, 5000);
        }

        function animateBackgroundGradient() {
            let hue = 0;
            setInterval(() => {
                hue = (hue + 0.2) % 360;
                document.body.style.background = `linear-gradient(135deg, 
                    hsl(${35 + Math.sin(hue * 0.1) * 5}, 45%, 75%) 0%, 
                    hsl(${40 + Math.sin(hue * 0.1) * 5}, 40%, 70%) 50%, 
                    hsl(${45 + Math.sin(hue * 0.1) * 5}, 35%, 65%) 100%)`;
            }, 100);
        }

        // File upload functionality
        const uploadFrame = document.getElementById('uploadFrame');
        const fileInput = document.getElementById('artworkFile');
        const imagePreview = document.getElementById('imagePreview');

        uploadFrame.addEventListener('click', () => {
            fileInput.click();
        });

        uploadFrame.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadFrame.classList.add('drag-over');
        });

        uploadFrame.addEventListener('dragleave', () => {
            uploadFrame.classList.remove('drag-over');
        });

        uploadFrame.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadFrame.classList.remove('drag-over');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFile(files[0]);
            }
        });

        fileInput.addEventListener('change', (e) => {
            if (e.target.files.length > 0) {
                handleFile(e.target.files[0]);
            }
        });

        function handleFile(file) {
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    imagePreview.innerHTML = `<img src="${e.target.result}" alt="Preview" class="preview-image">`;
                };
                reader.readAsDataURL(file);
            }
        }

        // Quantity controls
        let quantity = 1;

        function changeQuantity(change) {
            quantity = Math.max(1, quantity + change);
            document.getElementById('quantityDisplay').textContent = quantity;
        }

        // Submit functionality
        function submitArtwork() {
            const title = document.getElementById('artworkTitle').value;
            const description = document.getElementById('artworkDescription').value;
            const price = document.getElementById('artworkPrice').value;
            const artistName = document.getElementById('artistName').value;
            const hasImage = document.getElementById('artworkFile').files.length > 0;

            if (!title || !description || !price || !artistName || !hasImage) {
                alert('Please fill in all fields and upload your artwork before presenting to the gallery.');
                return;
            }

            // Simulate submission with royal animation
            const button = document.querySelector('.royal-submit');
            button.style.transform = 'scale(0.95)';
            button.innerHTML = '✨ Presenting to Gallery... ✨';
            
            setTimeout(() => {
                button.innerHTML = '🎉 Successfully Presented! 🎉';
                button.style.background = 'linear-gradient(135deg, #228b22 0%, #32cd32 100%)';
                
                setTimeout(() => {
                    alert(`Thank you, ${artistName}! Your artwork "${title}" has been successfully presented to the Royal Art Gallery. Our curators will review your submission shortly.`);
                    
                    // Reset form
                    document.getElementById('artworkTitle').value = '';
                    document.getElementById('artworkDescription').value = '';
                    document.getElementById('artworkPrice').value = '';
                    document.getElementById('artistName').value = '';
                    document.getElementById('artworkFile').value = '';
                    imagePreview.innerHTML = '';
                    quantity = 1;
                    document.getElementById('quantityDisplay').textContent = '1';
                    
                    button.innerHTML = '✨ Present to Gallery ✨';
                    button.style.background = 'linear-gradient(135deg, #d4af37 0%, #b8860b 50%, #8b4513 100%)';
                    button.style.transform = 'scale(1)';
                }, 1000);
            }, 2000);
        }

        // Initialize enhanced dynamic background
        createSparkles();
        createGoldenParticles();
        createDiyaFlames();
        createFloatingElements();
        createMouseTrail();
        createPulsingBackground();
        animateBackgroundGradient();

        // Add scroll animations
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -100px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateX(0)';
                }
            });
        }, observerOptions);

        document.querySelectorAll('.scroll-section').forEach(section => {
            observer.observe(section);
        });
    </script>
</body>
</html>